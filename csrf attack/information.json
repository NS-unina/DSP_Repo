{"description":"csrf attack scenario","goal":"<p>Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. CSRF attacks specifically target state-changing requests, not theft of data, since the attacker has no way to see the response to the forged request. With a little help of social engineering (such as sending a link via email or chat), an attacker may trick the users of a web application into executing actions of the attacker's choosing. If the victim is a normal user, a successful CSRF attack can force the user to perform state changing requests like transferring funds, changing their email address, and so forth. If the victim is an administrative account, CSRF can compromise the entire web application.</p>","solution":"<p>In this scenario the user must log in to establish a session with the server.</p>\n<p>You can insert the credentials by logging onto the server at the address: \"193.20.1.4\" with username = root and password = test and insert them in the DB called \"csrf\".</p>\n<p>After, you can reach the login panel at \"193.20.1.2/login.php\" and insert the credentials to enter the welcome page.</p>\n<p>The welcome page allows the user to log out and delete the account. The attacker will use this function (delete account) to delete the user's account.</p>\n<p>It's possible because the attacker exploits the current session. if the session isn't establish the attacker cannot delete the user's account.</p>\n<p>&nbsp;When the login is done you can delete user's account by putting this link in the browser: \"193.30.1.2/attack.html\".</p>\n<p>The attacker can deceive the user by sending the malicious link via email for example.</p>\n<p>&nbsp;</p>\n<p>You can find all the login panel scripts in the \"www\" folder while the attacker script in the \"wwws\" folder</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>","author":"Gennaro"}
